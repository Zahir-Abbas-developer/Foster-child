import { RHFSelect, RHFTextField } from "@root/components/hook-form";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import RHFRadioGroupWithLabel from "@root/components/hook-form/RHFRadioGroupWithLabel";
import * as Yup from "yup";

export const complaintsReportSchema = Yup.object().shape({
  //   office_name: Yup.string().required("Field is required."),
  //   agency_name: Yup.string().required("Field is required."),
  //   address: Yup.string().required("Field is required."),
  //   city: Yup.string().required("Field is required."),
  //   telephone: Yup.string().required("Field is required."),
  //   office_no: Yup.string().required("Field is required."),
  //   mobile_no: Yup.string().required("Field is required."),
  //   email: Yup.string().required("Field is required."),
  //   county: Yup.string().required("Field is required."),
  //   country: Yup.string().required("Field is required."),
  //   postal_code: Yup.string().required("Field is required."),
});

export const childComplaintsFormDataFunction = (isFieldDisable = false) => [
  {
    gridLength: 6,
    otherOptions: {
      label: "URN Number",
      name: "urnNumber",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Complaints Against Person Category",
      name: "complaintAgainstPersonCateg",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Complaints Againts Person",
      name: "complaintAgainstPerson",
      fullWidth: true,
      select: true,
      options: [{ value: "teacher", label: "Teacher" }],
      disabled: isFieldDisable,
    },
    component: RHFSelect,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Complaints Date",
      name: "complaintDate",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFDatePicker,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Agency Reported Date",
      name: "agencyReportedDate",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFDatePicker,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Review Date",
      name: "reviewDate",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFDatePicker,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Nature of Complaints",
      name: "natureOfComplaint",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Person Notified to Agency",
      name: "personNotifiedToAgency",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Person Completing Report",
      name: "personCompletingReport",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Agency Social Worker Involved",
      name: "agencySocialWorkerInvolved",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Child Local Authority",
      name: "childLA",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Nil" }],
      disabled: isFieldDisable,
    },
    component: RHFSelect,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Carer Local Authority",
      name: "carerLA",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Nil" }],
      disabled: isFieldDisable,
    },
    component: RHFSelect,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Complaints Details",
      name: "complaintDetails",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Investigation Under Taken",
      name: "investigationTakenUnder",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Independent Support Offered info",
      name: "independentSupportOffered",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Agency Action Taken",
      name: "agencyActionTaken",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Complaints Outcome",
      name: "complaintOutcome",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Is this Substantiated",
      name: "isSubstantiated",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Nil" }],
      disabled: isFieldDisable,
    },
    component: RHFSelect,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Team Manager Recommendation",
      name: "teamManagerRecommend",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Has Registered Manager Informed",
      name: "hasRegManagInformed",
      options: [true, false],
      getOptionLabel: ["Yes", "No"],
      disabled: isFieldDisable,
    },
    component: RHFRadioGroupWithLabel,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Registered Manager Informed Date",
      name: "regManagInformedDate",
      fullWidth: true,
      disabled: isFieldDisable,
    },
    component: RHFDatePicker,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Has Ofsted been Informed",
      name: "hasOfstedInformed",
      options: [true, false],
      getOptionLabel: ["Yes", "No"],
      disabled: isFieldDisable,
    },
    component: RHFRadioGroupWithLabel,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Ofsted Notified Date",
      name: "ofstedNotifieddDate",
      disabled: isFieldDisable,
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Is Scheduled",
      name: "isScheduled",
      options: [true, false],
      getOptionLabel: ["Yes", "No"],
      disabled: isFieldDisable,
    },
    component: RHFRadioGroupWithLabel,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Reported To",
      name: "reportedTo",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 12,
    otherOptions: {
      label: "Registered Manager Recommendation",
      name: "regManagRecomd",
      multiline: true,
      minRows: 3,
      disabled: isFieldDisable,
    },
    component: RHFTextField,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Closure Date",
      name: "closureDate",
      disabled: isFieldDisable,
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    gridLength: 6,
    otherOptions: {
      label: "Next Alert Date",
      name: "nextAlertDate",
      disabled: isFieldDisable,
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
];
export const initialValues = {
  urnNumber: "",
  complaintAgainstPersonCateg: "",
  complaintAgainstPerson: "",
  complaintDate: new Date(),
  agencyReportedDate: new Date(),
  reviewDate: new Date(),
  natureOfComplaint: "",
  personNotifiedToAgency: "",
  personCompletingReport: "",
  agencySocialWorkerInvolved: "",
  childLA: "",
  carerLA: "",
  complaintDetails: "",
  investigationTakenUnder: "",
  independentSupportOffered: "",
  agencyActionTaken: "",
  complaintOutcome: "",
  isSubstantiated: "",
  teamManagerRecommend: "",
  hasRegManagInformed: true,
  regManagInformedDate: new Date(),
  hasOfstedInformed: true,
  ofstedNotifieddDate: new Date(),
  isScheduled: true,
  reportedTo: "",
  regManagRecomd: "",
  closureDate: new Date(),
  nextAlertDate: new Date(),
};

export const defaultValueComplaintsForm = (data: any = initialValues) => {
  return {
    urnNumber: data?.urnNumber,
    complaintAgainstPersonCateg: data?.complaintAgainstPersonCateg,
    complaintAgainstPerson: data?.complaintAgainstPerson,
    complaintDate: new Date(data?.complaintDate),
    agencyReportedDate: new Date(data?.agencyReportedDate),
    reviewDate: new Date(data?.reviewDate),
    natureOfComplaint: data?.natureOfComplaint,
    personNotifiedToAgency: data?.personNotifiedToAgency,
    personCompletingReport: data?.personCompletingReport,
    agencySocialWorkerInvolved: data?.agencySocialWorkerInvolved,
    childLA: data?.childLA,
    carerLA: data?.carerLA,
    complaintDetails: data?.complaintDetails,
    investigationTakenUnder: data?.investigationTakenUnder,
    independentSupportOffered: data?.independentSupportOffered,
    agencyActionTaken: data?.agencyActionTaken,
    complaintOutcome: data?.complaintOutcome,
    isSubstantiated: data?.isSubstantiated,
    teamManagerRecommend: data?.teamManagerRecommend,
    hasRegManagInformed: data?.hasRegManagInformed,
    regManagInformedDate: new Date(data?.regManagInformedDate),
    hasOfstedInformed: data?.hasOfstedInformed,
    ofstedNotifieddDate: new Date(data?.ofstedNotifieddDate),
    isScheduled: data?.isScheduled,
    reportedTo: data?.reportedTo,
    regManagRecomd: data?.regManagRecomd,
    closureDate: new Date(data?.closureDate),
    nextAlertDate: new Date(data?.nextAlertDate),
  };
};
